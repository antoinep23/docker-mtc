services:
  api:
    container_name: dev1
    build: ./dev1
    networks:
      - backend
    volumes:
      - type: volume
        source: dev1-vol
        target: /app

  nodered:
    container_name: nodered
    build: ./nodered
    networks:
      - backend
    ports:
      - '1880:1880'
    volumes:
      - type: volume
        source: nodered-vol
        target: /data
    environment:
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}

  influxdb:
    container_name: influxdb
    build: ./influxdb
    networks:
      - backend
    volumes:
      - type: volume
        source: influxdb-vol
        target: /var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=${DOCKER_INFLUXDB_INIT_MODE}
      - DOCKER_INFLUXDB_INIT_USERNAME=${DOCKER_INFLUXDB_INIT_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${DOCKER_INFLUXDB_INIT_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${DOCKER_INFLUXDB_INIT_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${DOCKER_INFLUXDB_INIT_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}

  grafana:
    container_name: grafana
    build: ./grafana
    networks:
      - frontend
      - backend
      - db
    ports:
      - '3000:3000'
    volumes:
      - type: volume
        source: grafana-vol
        target: /var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  postgres:
    container_name: postgres
    build: ./postgres
    networks:
      - db
    volumes:
      - type: volume
        source: postgres-vol
        target: /var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  postgrest:
    container_name: postgrest
    image: postgrest/postgrest
    networks:
      - backend
      - db
    environment:
      - PGRST_DB_URI=postgres://${PGRST_DB_USER}:${PGRST_DB_PASSWORD}@postgres:5432/${PGRST_DB_NAME}
      - PGRST_DB_ANON_ROLE=${PGRST_DB_ANON_ROLE}
      - PGRST_DB_SCHEMA=${PGRST_DB_SCHEMA}

volumes:
  dev1-vol: {}
  nodered-vol: {}
  influxdb-vol: {}
  grafana-vol: {}
  postgres-vol: {}

networks:
  frontend: {}
  backend: {}
  db: {}
